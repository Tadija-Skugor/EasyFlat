{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tadija\\\\Documents\\\\GitHub\\\\Progi-Projekt\\\\frontend\\\\src\\\\pages\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const [discussions, setDiscussions] = useState([]);\n  const [responses, setResponses] = useState(''); // Initialize as a string\n  const [selectedDiscussionId, setSelectedDiscussionId] = useState(null);\n  const [newResponse, setNewResponse] = useState('');\n  const [remainingResponses, setRemainingResponses] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [sessionVoted, setSessionVoted] = useState(false); // Track session voting\n  const location = useLocation();\n  const [votingAdded, setVotingAdded] = useState({});\n  const [showAddDiscussion, setShowAddDiscussion] = useState(false); // Manage add discussion form visibility\n  const [newDiscussion, setNewDiscussion] = useState({\n    naslov: '',\n    opis: ''\n  });\n  const [Glasanjes, setGlasanjes] = useState([]);\n  const [userEmail, setUserEmail] = useState('');\n  const [userVotes, setUserVotes] = useState({});\n  const [selectedVotes, setSelectedVotes] = useState({});\n  const [hasVoted, setHasVoted] = useState({});\n  const [expandedInfo, setExpandedInfo] = useState({});\n  const [isModalOpen, setIsModalOpen] = useState(false); // State for modal visibility\n  const [newGlasanje, setNewGlasanje] = useState({\n    naslov: '',\n    opis: '',\n    datum_istece: ''\n  });\n  const handleAddVoting = async discussionId => {\n    if (!userEmail) {\n      console.log(\"User is not logged in\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:4000/glasanje/dodavanjeGlasovanja', {\n        discussionId: discussionId,\n        naslov: newGlasanje.naslov,\n        opis: newGlasanje.opis,\n        datum_istece: newGlasanje.datum_istece,\n        kreator: userEmail\n      }, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        setVotingAdded(prev => ({\n          ...prev,\n          [discussionId]: true\n        }));\n        fetchDiscussions(); // Refresh discussions to include the new voting\n      }\n    } catch (error) {\n      console.error(\"Error adding voting:\", error);\n    }\n  };\n  const fetchDiscussions = async searchQuery => {\n    try {\n      const response = await axios.get('http://localhost:4000/data/allDiscussions', {\n        withCredentials: true // Ensures cookies are sent with the request if needed\n      });\n      let filteredDiscussions = response.data;\n      console.log(filteredDiscussions);\n      // If searchQuery exists, filter discussions based on title (naslov)\n      if (searchQuery) {\n        filteredDiscussions = filteredDiscussions.filter(discussion => discussion.naslov.toLowerCase().includes(searchQuery.toLowerCase()));\n      }\n      const [userEmailResponse, GlasanjesResponse] = await Promise.all([axios.get('http://localhost:4000/glasanje/userEmail', {\n        withCredentials: true\n      }), axios.get('http://localhost:4000/glasanje/Glasanjes')]);\n      setUserEmail(userEmailResponse.data.email);\n      //setGlasanjes(GlasanjesResponse.data);\n      setDiscussions(filteredDiscussions);\n      if (userEmailResponse.data.email) {\n        const votes = {};\n        const votedGlasanjes = {};\n        for (let discussion of filteredDiscussions) {\n          if (discussion.forma) {\n            console.log(\"forma: \", discussion.forma);\n            const user_glasanje = await axios.get('http://localhost:4000/glasanje/userVote', {\n              params: {\n                email: userEmailResponse.data.email,\n                GlasanjeId: discussion.forma.id\n              },\n              withCredentials: true\n            });\n            console.log(user_glasanje);\n            if (user_glasanje.data.voted) {\n              votes[discussion.forma.id] = user_glasanje.data.vote ? \"da\" : \"ne\";\n              votedGlasanjes[discussion.forma.id] = true;\n            }\n          }\n        }\n        console.log(\"votes: \", votes);\n        console.log(\"votedGlasanjes: \", votedGlasanjes);\n        setUserVotes(votes);\n        setHasVoted(votedGlasanjes);\n      }\n    } catch (error) {\n      console.error('Error fetching discussions:', error);\n      setError('Failed to fetch discussions');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleInfo = GlasanjeId => {\n    setExpandedInfo(prev => ({\n      ...prev,\n      [GlasanjeId]: !prev[GlasanjeId]\n    }));\n  };\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewGlasanje(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Fetch responses to a selected discussion\n  const fetchResponses = async discussionId => {\n    try {\n      const response = await axios.get('http://localhost:4000/data/discussionResponses', {\n        params: {\n          id_diskusije: discussionId\n        }\n      }, {\n        withCredentials: true\n      });\n\n      // spremi sve odgovore u wrapper element 'odgovori' kako bi parseFromString kod radio ispravno\n      const wrappedXmlString = `<odgovori>${response.data.odgovori}</odgovori>`;\n      const broj_preostalih_odgovora = response.data.br_odgovora;\n      setRemainingResponses(prev => ({\n        ...prev,\n        [discussionId]: broj_preostalih_odgovora\n      }));\n\n      // parsiranje XMLa u DOM objekt\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(wrappedXmlString, \"text/xml\");\n\n      // izdvajanje odgovora iz DOM objekta\n      const responseElements = xmlDoc.getElementsByTagName(\"odgovor\");\n      const parsedResponses = Array.from(responseElements).map(responseElement => ({\n        korisnik: responseElement.getElementsByTagName(\"korisnik\")[0].textContent,\n        tekst: responseElement.getElementsByTagName(\"tekst\")[0].textContent\n      }));\n      setResponses(parsedResponses);\n      setSelectedDiscussionId(discussionId);\n    } catch (error) {\n      console.error(\"Error fetching responses:\", error);\n      setResponses([]); // Reset responses to empty string on error\n    }\n  };\n\n  // Handle adding a new response\n  const handleAddResponse = async e => {\n    e.preventDefault();\n    if (!selectedDiscussionId) return;\n\n    // ne moze se poslati odgovor ako je polje odgovora prazno \n    if (!newResponse.trim()) {\n      console.log('The textarea is empty. Please enter a response before submitting.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:4000/data/discussionAddResponse', {\n        id_diskusije: selectedDiscussionId,\n        //korisnik: 'User1', // Replace with dynamic user data if needed\n        tekst: newResponse\n      }, {\n        withCredentials: true\n      });\n      console.log('Response added:', response.data);\n      setNewResponse(''); // Clear the input\n      fetchResponses(selectedDiscussionId); // Refresh responses\n    } catch (error) {\n      console.error('Error adding response:', error);\n    }\n  };\n\n  // ova funkcija jos ne radi dobro, treba se popraviti\n  const handleVoteSubmit = async (formaId, vote) => {\n    try {\n      const response = await axios.post('http://localhost:4000/glasanje', {\n        GlasanjeId: formaId,\n        vote\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        // Update state after a successful vote\n        setDiscussions(prevDiscussions => prevDiscussions.map(discussion => discussion.forma && discussion.forma.id === formaId ? {\n          ...discussion,\n          forma: {\n            ...discussion.forma,\n            glasovanje_da: vote === 'da' ? discussion.forma.glasovanje_da + 1 : discussion.forma.glasovanje_da,\n            glasovanje_ne: vote === 'ne' ? discussion.forma.glasovanje_ne + 1 : discussion.forma.glasovanje_ne\n          }\n        } : discussion));\n        setUserVotes(prevVotes => ({\n          ...prevVotes,\n          [formaId]: vote\n        }));\n        setHasVoted(prevHasVoted => ({\n          ...prevHasVoted,\n          [formaId]: true\n        }));\n        setSelectedVotes(prevSelectedVotes => ({\n          ...prevSelectedVotes,\n          [formaId]: ''\n        }));\n      }\n    } catch (error) {\n      console.error('Error submitting vote:', error);\n    }\n  };\n  const handleRadioChange = (formaId, value) => {\n    setSelectedVotes(prevSelectedVotes => ({\n      ...prevSelectedVotes,\n      [formaId]: value\n    }));\n  };\n\n  // Effect for loading search query or fetching all discussions\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const searchQuery = params.get('search_query');\n    fetchDiscussions(searchQuery); // Pass the searchQuery to filter discussions\n  }, [location.search]);\n  const handleAddDiscussion = async e => {\n    e.preventDefault();\n    const {\n      naslov,\n      opis\n    } = newDiscussion;\n    if (!naslov.trim() || !opis.trim()) {\n      console.log('All fields are required.');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:4000/data/addDiscussion', {\n        naslov,\n        opis\n      }, {\n        withCredentials: true // Ensure cookies are sent with the request\n      });\n      setNewDiscussion({\n        naslov: '',\n        opis: ''\n      });\n      setShowAddDiscussion(false);\n      fetchDiscussions();\n    } catch (error) {\n      console.error('Error adding discussion:', error);\n    }\n  };\n  const toggleResponsesVisibility = discussionId => {\n    if (selectedDiscussionId === discussionId) {\n      setSelectedDiscussionId(null);\n      setResponses('');\n    } else {\n      fetchResponses(discussionId);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"U\\u010Ditavanje podataka...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"U\\u010Ditavanje podataka...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rezultati pretrage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: result\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discussions-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diskusije\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddDiscussion(!showAddDiscussion),\n        children: showAddDiscussion ? 'Zatvori formu' : 'Dodaj novu diskusiju'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), showAddDiscussion && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-discussion-form\",\n        onSubmit: handleAddDiscussion,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Dodaj novu diskusiju\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Naslov:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newDiscussion.naslov,\n            onChange: e => setNewDiscussion({\n              ...newDiscussion,\n              naslov: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Opis:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newDiscussion.opis,\n            onChange: e => setNewDiscussion({\n              ...newDiscussion,\n              opis: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Dodaj diskusiju\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this), discussions.map(discussion => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"discussion-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: discussion.naslov\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Autor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 28\n          }, this), \" \", discussion.kreator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Opis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 28\n          }, this), \" \", discussion.opis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Datum objavljeno:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 28\n          }, this), \" \", new Date(discussion.datum_stvorena).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this), discussion.forma && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forma-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 37\n            }, this), \" \", discussion.forma.naslov]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Glasova 'Da':\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 36\n            }, this), \" \", discussion.forma.glasovanje_da]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Glasova 'Ne':\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 36\n            }, this), \" \", discussion.forma.glasovanje_ne]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum stvoreno:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 36\n            }, this), \" \", new Date(discussion.forma.datum_stvoreno).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Datum isti\\u010De:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 36\n            }, this), \" \", new Date(discussion.forma.datum_istece).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Kreator forme:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 36\n            }, this), \" \", discussion.forma.kreator]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"voting-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Sla\\u017Eete li se?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 37\n            }, this), hasVoted[discussion.forma.id] ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"vote-results\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Va\\u0161 glas: \", userVotes[discussion.forma.id]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Da: \", discussion.forma.glasovanje_da]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ne: \", discussion.forma.glasovanje_ne]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `vote_${discussion.forma.id}`,\n                  value: \"da\",\n                  checked: selectedVotes[discussion.forma.id] === 'da',\n                  onChange: () => handleRadioChange(discussion.forma.id, 'da')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 49\n                }, this), \"Da\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `vote_${discussion.forma.id}`,\n                  value: \"ne\",\n                  checked: selectedVotes[discussion.forma.id] === 'ne',\n                  onChange: () => handleRadioChange(discussion.forma.id, 'ne')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 49\n                }, this), \"Ne\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-vote-button\",\n                onClick: () => handleVoteSubmit(discussion.forma.id, selectedVotes[discussion.forma.id]),\n                disabled: !selectedVotes[discussion.forma.id],\n                children: \"Po\\u0161aljite glas\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 29\n        }, this), !discussion.forma && !votingAdded[discussion.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-voting-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Dodaj glasanje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Naslov:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"naslov\",\n              value: newGlasanje.naslov,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Opis:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"opis\",\n              value: newGlasanje.opis,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Datum isteka:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"datum_istece\",\n              value: newGlasanje.datum_istece,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddVoting(discussion.id),\n            children: \"Dodaj glasanje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleResponsesVisibility(discussion.id),\n          children: selectedDiscussionId === discussion.id ? 'Sakrij odgovore' : 'Vidi odgovore'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), selectedDiscussionId === discussion.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"responses-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Odgovori na diskusiju\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 33\n          }, this), responses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: responses.map((response, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Korisnik:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 52\n                }, this), \" \", response.korisnik]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Tekst:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 52\n                }, this), \" \", response.tekst]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 49\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Jo\\u0161 nema odgovora.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddResponse,\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: newResponse,\n              onChange: e => setNewResponse(e.target.value),\n              placeholder: \"Dodaj odgovor...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: remainingResponses[selectedDiscussionId] === 0,\n              children: \"Po\\u0161aljite odgovor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 37\n            }, this), remainingResponses[selectedDiscussionId] === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'red',\n                marginLeft: '10px'\n              },\n              children: \"Diskusija nema vi\\u0161e dostupnih poruka\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }, this)]\n      }, discussion.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"ajpUJt1PMEYmbPRSjyA3EYQX6dE=\", false, function () {\n  return [useLocation];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","jsxDEV","_jsxDEV","Home","_s","searchResults","setSearchResults","discussions","setDiscussions","responses","setResponses","selectedDiscussionId","setSelectedDiscussionId","newResponse","setNewResponse","remainingResponses","setRemainingResponses","loading","setLoading","error","setError","sessionVoted","setSessionVoted","location","votingAdded","setVotingAdded","showAddDiscussion","setShowAddDiscussion","newDiscussion","setNewDiscussion","naslov","opis","Glasanjes","setGlasanjes","userEmail","setUserEmail","userVotes","setUserVotes","selectedVotes","setSelectedVotes","hasVoted","setHasVoted","expandedInfo","setExpandedInfo","isModalOpen","setIsModalOpen","newGlasanje","setNewGlasanje","datum_istece","handleAddVoting","discussionId","console","log","response","post","kreator","withCredentials","data","success","prev","fetchDiscussions","searchQuery","get","filteredDiscussions","filter","discussion","toLowerCase","includes","userEmailResponse","GlasanjesResponse","Promise","all","email","votes","votedGlasanjes","forma","user_glasanje","params","GlasanjeId","id","voted","vote","toggleInfo","openModal","closeModal","handleInputChange","e","name","value","target","fetchResponses","id_diskusije","wrappedXmlString","odgovori","broj_preostalih_odgovora","br_odgovora","parser","DOMParser","xmlDoc","parseFromString","responseElements","getElementsByTagName","parsedResponses","Array","from","map","responseElement","korisnik","textContent","tekst","handleAddResponse","preventDefault","trim","handleVoteSubmit","formaId","headers","prevDiscussions","glasovanje_da","glasovanje_ne","prevVotes","prevHasVoted","prevSelectedVotes","handleRadioChange","URLSearchParams","search","handleAddDiscussion","toggleResponsesVisibility","children","fileName","_jsxFileName","lineNumber","columnNumber","className","result","index","onClick","onSubmit","type","onChange","Date","datum_stvorena","toLocaleDateString","datum_stvoreno","checked","disabled","length","placeholder","style","color","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Tadija/Documents/GitHub/Progi-Projekt/frontend/src/pages/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Main.css';\r\n\r\nexport default function Home() {\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [discussions, setDiscussions] = useState([]);\r\n    const [responses, setResponses] = useState(''); // Initialize as a string\r\n    const [selectedDiscussionId, setSelectedDiscussionId] = useState(null);\r\n    const [newResponse, setNewResponse] = useState('');\r\n    const [remainingResponses, setRemainingResponses] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [sessionVoted, setSessionVoted] = useState(false); // Track session voting\r\n    const location = useLocation();\r\n    const [votingAdded, setVotingAdded] = useState({});\r\n\r\n\r\n    const [showAddDiscussion, setShowAddDiscussion] = useState(false); // Manage add discussion form visibility\r\n    const [newDiscussion, setNewDiscussion] = useState({\r\n        naslov: '',\r\n        opis: '',\r\n    });\r\n    const [Glasanjes, setGlasanjes] = useState([]);\r\n    const [userEmail, setUserEmail] = useState('');\r\n        const [userVotes, setUserVotes] = useState({});\r\n        const [selectedVotes, setSelectedVotes] = useState({});\r\n        const [hasVoted, setHasVoted] = useState({});\r\n        \r\n        const [expandedInfo, setExpandedInfo] = useState({});\r\n        const [isModalOpen, setIsModalOpen] = useState(false); // State for modal visibility\r\n        const [newGlasanje, setNewGlasanje] = useState({\r\n            naslov: '',\r\n            opis: '',\r\n            datum_istece: '',\r\n        });\r\n    \r\n        const handleAddVoting = async (discussionId) => {\r\n            if (!userEmail) {\r\n                console.log(\"User is not logged in\");\r\n                return;\r\n            }\r\n        \r\n            try {\r\n                const response = await axios.post(\r\n                    'http://localhost:4000/glasanje/dodavanjeGlasovanja',\r\n                    {\r\n                        discussionId: discussionId,\r\n                        naslov: newGlasanje.naslov,\r\n                        opis: newGlasanje.opis,\r\n                        datum_istece: newGlasanje.datum_istece,\r\n                        kreator: userEmail,\r\n                    },\r\n                    { withCredentials: true }\r\n                );\r\n        \r\n                if (response.data.success) {\r\n                    setVotingAdded((prev) => ({\r\n                        ...prev,\r\n                        [discussionId]: true,\r\n                    }));\r\n                    fetchDiscussions(); // Refresh discussions to include the new voting\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error adding voting:\", error);\r\n            }\r\n        };\r\n        \r\n    const fetchDiscussions = async (searchQuery) => {\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/data/allDiscussions', {\r\n                withCredentials: true,  // Ensures cookies are sent with the request if needed\r\n            });\r\n            let filteredDiscussions = response.data;\r\n            console.log(filteredDiscussions);\r\n            // If searchQuery exists, filter discussions based on title (naslov)\r\n            if (searchQuery) {\r\n                filteredDiscussions = filteredDiscussions.filter((discussion) =>\r\n                    discussion.naslov.toLowerCase().includes(searchQuery.toLowerCase())\r\n                );\r\n            }\r\n    \r\n            const [userEmailResponse, GlasanjesResponse] = await Promise.all([\r\n                axios.get('http://localhost:4000/glasanje/userEmail', { withCredentials: true }),\r\n                axios.get('http://localhost:4000/glasanje/Glasanjes'),\r\n            ]);\r\n\r\n            setUserEmail(userEmailResponse.data.email);\r\n            //setGlasanjes(GlasanjesResponse.data);\r\n            setDiscussions(filteredDiscussions);\r\n            if (userEmailResponse.data.email) {\r\n                const votes = {};\r\n                const votedGlasanjes = {};\r\n\r\n                for (let discussion of filteredDiscussions) {\r\n                    if (discussion.forma){\r\n                    console.log(\"forma: \", discussion.forma);\r\n                    const user_glasanje = await axios.get('http://localhost:4000/glasanje/userVote', {\r\n                        params: { email: userEmailResponse.data.email, GlasanjeId: discussion.forma.id },\r\n                        withCredentials: true,\r\n                    });\r\n                    console.log(user_glasanje);\r\n                    if (user_glasanje.data.voted) {\r\n                        votes[discussion.forma.id] = user_glasanje.data.vote ? \"da\" : \"ne\";\r\n                        votedGlasanjes[discussion.forma.id] = true;\r\n                    }\r\n                    }\r\n                }\r\n                console.log(\"votes: \", votes);\r\n                console.log(\"votedGlasanjes: \",votedGlasanjes);\r\n                setUserVotes(votes);\r\n                setHasVoted(votedGlasanjes);\r\n            }\r\n\r\n            \r\n            \r\n        } catch (error) {\r\n            console.error('Error fetching discussions:', error);\r\n            setError('Failed to fetch discussions');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const toggleInfo = (GlasanjeId) => {\r\n        setExpandedInfo((prev) => ({ ...prev, [GlasanjeId]: !prev[GlasanjeId] }));\r\n    };\r\n\r\n    const openModal = () => setIsModalOpen(true);\r\n    const closeModal = () => setIsModalOpen(false);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewGlasanje((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n    \r\n\r\n    // Fetch responses to a selected discussion\r\n    const fetchResponses = async (discussionId) => {\r\n        try {\r\n            const response = await axios.get('http://localhost:4000/data/discussionResponses', {\r\n                params: { id_diskusije: discussionId },\r\n            },                {withCredentials: true} \r\n        );\r\n\r\n            // spremi sve odgovore u wrapper element 'odgovori' kako bi parseFromString kod radio ispravno\r\n            const wrappedXmlString = `<odgovori>${response.data.odgovori}</odgovori>`;\r\n            const broj_preostalih_odgovora = response.data.br_odgovora;\r\n            setRemainingResponses((prev) => ({\r\n                ...prev,\r\n                [discussionId]: broj_preostalih_odgovora,\r\n            }));\r\n\r\n            // parsiranje XMLa u DOM objekt\r\n            const parser = new DOMParser();\r\n            const xmlDoc = parser.parseFromString(wrappedXmlString, \"text/xml\");\r\n    \r\n            // izdvajanje odgovora iz DOM objekta\r\n            const responseElements = xmlDoc.getElementsByTagName(\"odgovor\");\r\n            const parsedResponses = Array.from(responseElements).map((responseElement) => ({\r\n                korisnik: responseElement.getElementsByTagName(\"korisnik\")[0].textContent,\r\n                tekst: responseElement.getElementsByTagName(\"tekst\")[0].textContent,\r\n            }));\r\n    \r\n            setResponses(parsedResponses);\r\n            setSelectedDiscussionId(discussionId);\r\n        } catch (error) {\r\n            console.error(\"Error fetching responses:\", error);\r\n            setResponses([]); // Reset responses to empty string on error\r\n        }\r\n    };\r\n\r\n\r\n    // Handle adding a new response\r\n    const handleAddResponse = async (e) => {\r\n        e.preventDefault();\r\n        if (!selectedDiscussionId) return;\r\n\r\n        // ne moze se poslati odgovor ako je polje odgovora prazno \r\n        if (!newResponse.trim()) {\r\n            console.log('The textarea is empty. Please enter a response before submitting.');\r\n            return; \r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:4000/data/discussionAddResponse', {\r\n                id_diskusije: selectedDiscussionId,\r\n                //korisnik: 'User1', // Replace with dynamic user data if needed\r\n                tekst: newResponse,\r\n            },{withCredentials: true}\r\n\r\n        \r\n        );\r\n            console.log('Response added:', response.data);\r\n            setNewResponse(''); // Clear the input\r\n            fetchResponses(selectedDiscussionId); // Refresh responses\r\n        } catch (error) {\r\n            console.error('Error adding response:', error);\r\n        }\r\n    };\r\n\r\n    // ova funkcija jos ne radi dobro, treba se popraviti\r\n    const handleVoteSubmit = async (formaId, vote) => {\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:4000/glasanje',\r\n                { GlasanjeId: formaId, vote },\r\n                { headers: { 'Content-Type': 'application/json' }, withCredentials: true }\r\n            );\r\n    \r\n            if (response.data.success) {\r\n                // Update state after a successful vote\r\n                setDiscussions((prevDiscussions) =>\r\n                    prevDiscussions.map((discussion) =>\r\n                        discussion.forma && discussion.forma.id === formaId\r\n                            ? {\r\n                                  ...discussion,\r\n                                  forma: {\r\n                                      ...discussion.forma,\r\n                                      glasovanje_da: vote === 'da' ? discussion.forma.glasovanje_da + 1 : discussion.forma.glasovanje_da,\r\n                                      glasovanje_ne: vote === 'ne' ? discussion.forma.glasovanje_ne + 1 : discussion.forma.glasovanje_ne,\r\n                                  },\r\n                              }\r\n                            : discussion\r\n                    )\r\n                );\r\n    \r\n                setUserVotes((prevVotes) => ({ ...prevVotes, [formaId]: vote }));\r\n                setHasVoted((prevHasVoted) => ({ ...prevHasVoted, [formaId]: true }));\r\n                setSelectedVotes((prevSelectedVotes) => ({ ...prevSelectedVotes, [formaId]: '' }));\r\n            }\r\n        } catch (error) {\r\n            console.error('Error submitting vote:', error);\r\n        }\r\n    };\r\n    \r\n    const handleRadioChange = (formaId, value) => {\r\n        setSelectedVotes((prevSelectedVotes) => ({ ...prevSelectedVotes, [formaId]: value }));\r\n    };\r\n    \r\n\r\n    // Effect for loading search query or fetching all discussions\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(location.search);\r\n        const searchQuery = params.get('search_query');\r\n\r\n        fetchDiscussions(searchQuery); // Pass the searchQuery to filter discussions\r\n    }, [location.search]);\r\n\r\n\r\n    \r\n    const handleAddDiscussion = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { naslov, opis } = newDiscussion;\r\n\r\n        if (!naslov.trim() || !opis.trim()) {\r\n            console.log('All fields are required.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.post('http://localhost:4000/data/addDiscussion', {\r\n                naslov,\r\n                opis\r\n            }, {\r\n                withCredentials: true  // Ensure cookies are sent with the request\r\n            });\r\n            \r\n\r\n            setNewDiscussion({ naslov: '', opis: ''});\r\n            setShowAddDiscussion(false);\r\n            fetchDiscussions();\r\n        } catch (error) {\r\n            console.error('Error adding discussion:', error);\r\n        }\r\n    };\r\n    const toggleResponsesVisibility = (discussionId) => {\r\n        if (selectedDiscussionId === discussionId) {\r\n            setSelectedDiscussionId(null);\r\n            setResponses(''); \r\n        } else {\r\n            fetchResponses(discussionId);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Učitavanje podataka...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            {/*\r\n            <h1>HOME STRANICA</h1>\r\n            <p>\r\n                Ovdje ce se nalaziti naša početna home stranica. U njoj ce biti diskusije.<br />\r\n                Neki message board i voting sustav\r\n            </p>\r\n            */}\r\n\r\n            {loading ? (\r\n                <p>Učitavanje podataka...</p>\r\n            ) : error ? (\r\n                <p>{error}</p>\r\n            ) : (\r\n                <div className=\"search-results\">\r\n                    <h2>Rezultati pretrage</h2>\r\n                    <ul>\r\n                        {searchResults.map((result, index) => (\r\n                            <li key={index}>{result}</li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"discussions-wrapper\">\r\n                <h2>Diskusije</h2>\r\n\r\n                <button onClick={() => setShowAddDiscussion(!showAddDiscussion)}>\r\n                    {showAddDiscussion ? 'Zatvori formu' : 'Dodaj novu diskusiju'}\r\n                </button>\r\n\r\n                {showAddDiscussion && (\r\n                    <form className=\"add-discussion-form\" onSubmit={handleAddDiscussion}>\r\n                        <h3>Dodaj novu diskusiju</h3>\r\n                        <label>\r\n                            Naslov:\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newDiscussion.naslov}\r\n                                onChange={(e) =>\r\n                                    setNewDiscussion({ ...newDiscussion, naslov: e.target.value })\r\n                                }\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            Opis:\r\n                            <textarea\r\n                                value={newDiscussion.opis}\r\n                                onChange={(e) =>\r\n                                    setNewDiscussion({ ...newDiscussion, opis: e.target.value })\r\n                                }\r\n                            />\r\n                        </label>\r\n\r\n                        <button type=\"submit\">Dodaj diskusiju</button>\r\n                    </form>\r\n                )}\r\n\r\n                {discussions.map((discussion) => (\r\n                    <div key={discussion.id} className=\"discussion-box\">\r\n                        <h3>{discussion.naslov}</h3>\r\n                        <p><strong>Autor:</strong> {discussion.kreator}</p>\r\n                        <p><strong>Opis:</strong> {discussion.opis}</p>\r\n                        <p><strong>Datum objavljeno:</strong> {new Date(discussion.datum_stvorena).toLocaleDateString()}</p>\r\n                        \r\n\r\n                        {discussion.forma && (\r\n                            <div className=\"forma-section\">\r\n                                <h4><strong></strong> {discussion.forma.naslov}</h4>\r\n                                <p><strong>Glasova 'Da':</strong> {discussion.forma.glasovanje_da}</p>\r\n                                <p><strong>Glasova 'Ne':</strong> {discussion.forma.glasovanje_ne}</p>\r\n                                <p><strong>Datum stvoreno:</strong> {new Date(discussion.forma.datum_stvoreno).toLocaleDateString()}</p>\r\n                                <p><strong>Datum ističe:</strong> {new Date(discussion.forma.datum_istece).toLocaleDateString()}</p>\r\n                                <p><strong>Kreator forme:</strong> {discussion.forma.kreator}</p>\r\n\r\n                                <div className=\"voting-box\">\r\n                                    <h4>Slažete li se?</h4>\r\n                                    {hasVoted[discussion.forma.id] ? (\r\n                                        <div className=\"vote-results\">\r\n                                            <p>Vaš glas: {userVotes[discussion.forma.id]}</p>\r\n                                            <p>Da: {discussion.forma.glasovanje_da}</p>\r\n                                            <p>Ne: {discussion.forma.glasovanje_ne}</p>\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div className=\"radio-group\">\r\n                                            <label>\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={`vote_${discussion.forma.id}`}\r\n                                                    value=\"da\"\r\n                                                    checked={selectedVotes[discussion.forma.id] === 'da'}\r\n                                                    onChange={() => handleRadioChange(discussion.forma.id, 'da')}\r\n                                                />\r\n                                                Da\r\n                                            </label>\r\n                                            <label>\r\n                                                <input\r\n                                                    type=\"radio\"\r\n                                                    name={`vote_${discussion.forma.id}`}\r\n                                                    value=\"ne\"\r\n                                                    checked={selectedVotes[discussion.forma.id] === 'ne'}\r\n                                                    onChange={() => handleRadioChange(discussion.forma.id, 'ne')}\r\n                                                />\r\n                                                Ne\r\n                                            </label>\r\n                                            <button\r\n                                                className=\"submit-vote-button\"\r\n                                                onClick={() => handleVoteSubmit(discussion.forma.id, selectedVotes[discussion.forma.id])}\r\n                                                disabled={!selectedVotes[discussion.forma.id]}\r\n                                            >\r\n                                                Pošaljite glas\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n{!discussion.forma  && !votingAdded[discussion.id] && (\r\n    <div className=\"add-voting-form\">\r\n        <h4>Dodaj glasanje</h4>\r\n        <label>\r\n            Naslov:\r\n            <input\r\n                type=\"text\"\r\n                name=\"naslov\"\r\n                value={newGlasanje.naslov}\r\n                onChange={handleInputChange}\r\n            />\r\n        </label>\r\n        <label>\r\n            Opis:\r\n            <textarea\r\n                name=\"opis\"\r\n                value={newGlasanje.opis}\r\n                onChange={handleInputChange}\r\n            />\r\n        </label>\r\n        <label>\r\n            Datum isteka:\r\n            <input\r\n                type=\"date\"\r\n                name=\"datum_istece\"\r\n                value={newGlasanje.datum_istece}\r\n                onChange={handleInputChange}\r\n            />\r\n        </label>\r\n        <button onClick={() => handleAddVoting(discussion.id)}>\r\n            Dodaj glasanje\r\n        </button>\r\n    </div>\r\n)}\r\n\r\n                        <button onClick={() => toggleResponsesVisibility(discussion.id)}>\r\n                            {selectedDiscussionId === discussion.id ? 'Sakrij odgovore' : 'Vidi odgovore'}\r\n                        </button>\r\n\r\n                        {selectedDiscussionId === discussion.id && (\r\n                            <div className=\"responses-section\">\r\n                                <h3>Odgovori na diskusiju</h3>\r\n                                {responses.length > 0 ? (\r\n                                    <ul>\r\n                                        {responses.map((response, index) => (\r\n                                            <li key={index}>\r\n                                                <p><strong>Korisnik:</strong> {response.korisnik}</p>\r\n                                                <p><strong>Tekst:</strong> {response.tekst}</p>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                ) : (\r\n                                    <p>Još nema odgovora.</p>\r\n                                )}\r\n                                <form onSubmit={handleAddResponse}>\r\n                                    <textarea\r\n                                        value={newResponse}\r\n                                        onChange={(e) => setNewResponse(e.target.value)}\r\n                                        placeholder=\"Dodaj odgovor...\"\r\n                                    />\r\n                                    <button \r\n                                    type=\"submit\" \r\n                                    disabled={remainingResponses[selectedDiscussionId] === 0}\r\n                                    >\r\n                                    Pošaljite odgovor\r\n                                    </button>\r\n\r\n                                    {remainingResponses[selectedDiscussionId] === 0 && (\r\n                                    <span style={{ color: 'red', marginLeft: '10px' }}>Diskusija nema više dostupnih poruka</span>\r\n                                    )}\r\n                                </form>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}